{
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "import",
      "jest",
      "jsdoc",
      "lodash",
      "react-hooks",
      "security"
    ],
    "parserOptions": {
      "sourceType": "module"
    },
    "settings": {
      "import/parsers": { "@typescript-eslint/parser": [".ts", ".tsx"] },
      "import/resolver": { "eslint-import-resolver-typescript": true }
    },
    "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": "error",
      "@typescript-eslint/interface-name-prefix": ["error", "always"],
      "@typescript-eslint/ban-types": [
        "error",
        {
          "types": {
            "Object": "Avoid using the `Object` type. Did you mean `object`?",
            "Function": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`.",
            "Boolean": "Avoid using the `Boolean` type. Did you mean `boolean`?",
            "Number": "Avoid using the `Number` type. Did you mean `number`?",
            "String": "Avoid using the `String` type. Did you mean `string`?",
            "Symbol": "Avoid using the `Symbol` type. Did you mean `symbol`?"
          }
        }
      ],
      "@typescript-eslint/class-name-casing": "error",
      "@typescript-eslint/no-namespace": "error",
      "@typescript-eslint/no-triple-slash-reference": "error",
      "@typescript-eslint/no-empty-interface": "error",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/type-annotation-spacing": "error",
      "@typescript-eslint/unified-signatures": "error",
      "@typescript-eslint/prefer-for-of": "error",
      "import/no-self-import": "error",
      "import/no-useless-path-segments": "error",
      "import/no-deprecated": "warn",
      "import/no-duplicates": "error",
      "jest/lowercase-name": [
        "error",
        {
          "ignore": ["describe", "test"]
        }
      ],
      "jest/no-empty-title": "error",
      "jest/no-focused-tests": "error",
      "jest/no-jest-import": "error",
      "jest/no-mocks-import": "error",
      "jest/valid-expect": "error",
      "jsdoc/check-alignment": "error",
      "jsdoc/check-indentation": "warn",
      "@typescript-eslint/explicit-member-accessibility": [
        "error",
        {
          "overrides": {
            "constructors": "off",
            "accessors": "off"
          }
        }
      ],
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "import/no-unassigned-import": "warn",
      "import/no-extraneous-dependencies": "error",
      "security/detect-pseudoRandomBytes": "error",
      "@typescript-eslint/no-inferrable-types": [
        "error",
        {
          "ignoreParameters": false
        }
      ],
      "lodash/chaining": ["error", "never"],
      "arrow-parens": ["error", "as-needed"],
      "complexity": ["error", 20],
      "curly": "error",
      "constructor-super": "error",
      "eqeqeq": ["error", "smart"],
      "eol-last": "error",
      "guard-for-in": "error",
      "max-classes-per-file": "error",
      "max-lines-per-function": [
        "error",
        {
          "max": 50,
          "skipComments": true,
          "skipBlankLines": true
        }
      ],
      "max-len": [
        "error",
        {
          "code": 120,
          "ignoreComments": true,
          "ignoreStrings": true,
          "ignoreTemplateLiterals": true,
          "ignoreRegExpLiterals": true
        }
      ],
      "new-parens": "error",
      "max-lines": ["error", 1000],
      "no-bitwise": "error",
      "no-caller": "error",
      "no-cond-assign": "error",
      "no-console": [
        "error",
        {
          "allow": [
            "log",
            "error",
            "warn",
            "groupCollapsed",
            "group",
            "groupEnd",
            "debug",
            "dirxml",
            "assert"
          ]
        }
      ],
      "no-debugger": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-eval": "error",
      "no-labels": "error",
      "no-multiple-empty-lines": "error",
      "no-new-wrappers": "error",
      "no-redeclare": "error",
      "no-restricted-syntax": [
        "error",
        "MemberExpression[object.name='document'][property.name='write']"
      ],
      "no-return-await": "error",
      "no-restricted-globals": [
        "error",
        {
          "name": "fdescribe",
          "message": "Focused tests should not be checked in."
        },
        {
          "name": "fit",
          "message": "Focused tests should not be checked in."
        },
        {
          "name": "html",
          "message": "Any html (DOM) modifying functions are not allowed."
        }
      ],
      "no-restricted-properties": [
        "error",
        {
          "object": "test",
          "property": "only",
          "message": "Focused tests should not be checked in."
        },
        {
          "object": "describe",
          "property": "only",
          "message": "Focused tests should not be checked in."
        },
        {
          "object": "it",
          "property": "only",
          "message": "Focused tests should not be checked in."
        }
      ],
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-throw-literal": "error",
      "no-trailing-spaces": "error",
      "no-undef-init": "error",
      "no-unsafe-finally": "error",
      "no-unused-expressions": [
        "error",
        {
          "allowShortCircuit": true,
          "allowTernary": true
        }
      ],
      "no-var": "error",
      "object-shorthand": "error",
      "one-var": ["error", "never"],
      "prefer-const": "error",
      "prefer-template": "error",
      "radix": "error",
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "error",
      "semi": "error",
      "spaced-comment": [
        "error",
        "always",
        {
          "markers": ["/", "@function"],
          "exceptions": ["*"]
        }
      ],
      "use-isnan": "error"
    },
    "overrides": [
      {
        "files": [
          "*test.tsx",
          "*test.ts",
          "*integration.tsx",
          "*integration.ts",
          "*cypress.ts"
        ],
        "rules": {
          "max-lines-per-function": "off"
        }
      }
    ]
  }
  